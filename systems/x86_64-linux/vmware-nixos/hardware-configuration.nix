# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [ "ata_piix" "mptspi" "uhci_hcd" "ehci_pci" "ahci" "xhci_pci" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  boot = {
      kernelPackages = pkgs.linuxPackages_zen;
    loader = {
      efi = {
        canTouchEfiVariables = true;
        #efiSysMountPoint = "/boot/efi";
      };
      grub = {
        enable = true;

        ##theming
        #splashImage = ./boot_logo.png;
        #splashMode = "normal";
        #backgroundColor = "#000000";

        # install to EFI only
        efiSupport = true;
        device = "nodev";

        ## look
        #fontSize = 20;

        # auto populate boot entries
        useOSProber = true;

        ## add netboot.xyz as an entry
        #extraFiles."netboot-xyz.efi" = pkgs.netbootxyz-efi;
        #extraEntries = ''
        #  menuentry "netboot.xyz" {
        #    chainloader /netboot-xyz.efi
        #  }
        #'';

        #extraConfig = builtins.concatStringsSep "\n" [
        #  # FIXME: this doesn't work actually, lol
        #  ## auto boot last choice
        #  # save selection as default
        #  "GRUB_SAVEDEFAULT=true"
        #  # loade the previously saved selection
        #  "GRUB_DEFAULT=saved"
        #];
      };
    };
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/7d3f2445-28c4-4201-9a8c-54ecfad7c440";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/9DD7-EDB9";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/241a8fcb-6ad3-4433-a9c4-ceb0cefd513e";
      fsType = "btrfs";
      options = [
        "noatime"
      ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens33.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
